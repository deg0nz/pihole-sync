name: Binary

on:
  release:
    types: [created]
  pull_request:
    branches: [main]

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build - ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            archive-name: pihole-sync-x86_64-linux.tar.gz
          - target: aarch64-unknown-linux-gnu
            archive-name: pihole-sync-arm64-linux.tar.gz
          - target: armv7-unknown-linux-gnueabihf
            archive-name: pihole-sync-armv7-linux.tar.gz

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Package
        if: github.event_name == 'release'
        shell: bash
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/pihole-sync dist/
          cd dist
          tar -czvf ${{ matrix.archive-name }} pihole-sync

      - name: Upload artifact
        if: github.event_name == 'release'
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.target }}
          path: dist/${{ matrix.archive-name }}

  upload:
    name: Upload to GitHub Release
    if: github.event_name == 'release'
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            archive-name: pihole-sync-x86_64-linux.tar.gz
          - target: aarch64-unknown-linux-gnu
            archive-name: pihole-sync-arm64-linux.tar.gz
          - target: armv7-unknown-linux-gnueabihf
            archive-name: pihole-sync-armv7-linux.tar.gz

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: release-${{ matrix.target }}

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.archive-name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
